summary: Ensure that the hidraw interface works.

details: |
    The hidraw interface allows to access to hidraw device nodes.

environment:
    DEVICE: '/dev/hidraw0'
    FAKE_DEVICE: '/dev/hidraw100'
    CONNECTED_PATTERN: ':hidraw +test-snapd-hidraw'
    DISCONNECTED_PATTERN: '\- +test-snapd-hidraw:hidraw'

prepare: |
    . $TESTSLIB/snaps.sh
    install_local test-snapd-hidraw

    if [ -e $DEVICE ]; then
        touch $FAKE_DEVICE
    fi

restore: |
    rm -f call.error
    rm -f $FAKE_DEVICE

execute: |
    echo "The interface is not connected by default"
    snap interfaces | MATCH "$DISCONNECTED_PATTERN"

    device=$FAKE_DEVICE
    if [ -e $DEVICE ]; then
        device=$DEVICE
    fi

    echo "When the interface is connected"
    snap connect test-snapd-hidraw:hidraw
    snap interfaces | MATCH "$CONNECTED_PATTERN"

    echo "Then the snap is able to read the device file"
    test-snapd-hidraw.sh -c "dd if=$device of=/dev/null bs=1024 count=1"

    if [ "$(snap debug confinement)" = partial ] ; then
        exit 0
    fi

    echo "When the plug is disconnected"
    snap disconnect test-snapd-hidraw:hidraw
    snap interfaces | MATCH "$DISCONNECTED_PATTERN"

    echo "Then the snap is not able to read the the device file"
    if test-snapd-hidraw.sh -c "dd if=$device of=/dev/null bs=1024 count=1" 2>${PWD}/call.error; then
        echo "Expected permission error accessing to $device"
        exit 1
    fi
    MATCH "Permission denied" < call.error
